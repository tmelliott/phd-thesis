\chapter{Transit network}
\label{cha:network_model}

\phantom{\gls{gtfs},\gls{gtfs},\gls{gtfs}}

The collection of bus stops and intersections, and the roads which connect them, we refer to as a \emph{transit network}. The \emph{state} of this network changes in response to events throughout the city, some of which are predictable---peak traffic, for example---while others are not, such as accidents or weather events. In \cref{cha:vehicle_model}, we measured this state by tracking individual vehicles as they moved through the network. Now we discuss the network state itself, how it changes over time, and how we use the speed observations to update it. Finally, we discuss short-term forecasting as could be used for arrival time estimation in \cref{cha:prediction}.


Estimation of the network's state from vehicle travel time observations requires an understanding of the relationship between them. The underlying state of the network determines how fast (or slow) vehicles travel through it, which changes over time. Since speed is unlikely to be constant over segments, we use \emph{average speed} over the length of a segment, calculated using the length of the segment and how long vehicles take to travel along it,
\begin{equation}
\label{eq:ch4:average_speed_formula}
\text{average speed (m/s)} = \frac{
\text{segment length (m)}
}{
\text{travel time along segment (s)}
}.
\end{equation}
However, there are a variety of factors that may affect the average speed of individual buses, such as driver behaviour, cyclists sharing the road, variance between lanes, or pedestrians crossing the road, to name a few. Thus, even buses travelling along a road at the same time often have different (average) speeds, resulting in a \emph{distribution} of vehicle speeds, as demonstrated in the top half of \cref{fig:nw_model_hierarchy}. To further complicate matters, the observed average vehicle speeds are made with a level of uncertainty, which is depicted in the second half of \cref{fig:nw_model_hierarchy}.


Previous work has used \emph{travel time} to model the network state \citep{Yu_2011,Cats_2015,Gong_2013,Shalaby_2004,Reinhoudt_1997}, while others have used \emph{vehicle speed}, as I introduced above \citep{Ma_2019,Celan_2017,Celan_2018,Xinghao_2013}. We found that travel times tended to have long tails which the \kf{} was less capable of modelling, and required a lot of manual work determining the appropriate parameter values. Speed, however, is independent of road length, so most of the parameter values could take a single value across all segments.


In \cref{sec:nw_model}, we develop a model to estimate the distribution of vehicle speeds along roads throughout the transit network. In \cref{sec:nw_realtime}, I describe the real-time implementation of the model, while \cref{sec:nw_par_est} considers the estimation of model parameters from historical data. The model's forecasting ability can also be improved with historical data, as we discuss in \cref{sec:nw_hist_model} and revisit in \cref{cha:prediction}. Finally, we examine the computational aspects of the model's real-time implementation and its feasibility in \cref{sec:nw_implementation}. As with the vehicle model, we must keep in mind the real-time nature of the application, so computational efficiency is an important consideration throughout.


<<nw_model_hierarchy,echo=FALSE,fig.width=6,fig.height=5,out.width="0.6\\textwidth",fig.align="center",fig.cap="The hierarchy of speed uncertainty along a single road segment is composed of \\emph{between-vehicle variability} and \\emph{measurement error}. The top curve shows the underlying distribution of average vehicle speeds with solid arrows representing the true average speed of four vehicles. The second level shows the measurement uncertainty for each vehicle with the observed values represented as dots at the bottom of the graph.",fig.scap="The hierarchy of speed uncertainty along a single road segment">>=
suppressPackageStartupMessages({
    library(dplyr)
    library(ggplot2)
})

Length <- 1000
beta <- Length / 60
psi <- 5

d <- tibble(x = seq(0, 30, length = 1001)) %>%
    mutate(t = dnorm(x, beta, psi) / dnorm(beta, beta, psi))

obs <-
    tibble(
        B = Length / c(50, 55, 75, 100),
        E = c(3, 2, 6, 5) / 2,
        b = Length / c(55, 51, 70, 110),
    )

tr <- 0.005
dn <- dnorm(0, 0, 3)
d <- d %>%
    mutate(
        t1 = dnorm(x, obs$B[1], obs$E[1]) / dn,
            # dnorm(obs$B[1], obs$B[1], obs$E[1]),
        t2 = dnorm(x, obs$B[2], obs$E[2]) / dn,
            # dnorm(obs$B[1], obs$B[1], obs$E[1]),
        t3 = dnorm(x, obs$B[3], obs$E[3]) / dn,
            # dnorm(obs$B[1], obs$B[1], obs$E[1]),
        t4 = dnorm(x, obs$B[4], obs$E[4]) / dn
            # dnorm(obs$B[1], obs$B[1], obs$E[1])
    ) %>% mutate(
        t1 = ifelse(t1 < tr, NA, t1),
        t2 = ifelse(t2 < tr, NA, t2),
        t3 = ifelse(t3 < tr, NA, t3),
        t4 = ifelse(t4 < tr, NA, t4)
    )

ggplot(d, aes(x)) + geom_path(aes(y = t + 1)) +
    # add secondary bell curves
    geom_path(aes(y = t1 / 2), na.rm = TRUE) +
    geom_path(aes(y = t2 / 2), na.rm = TRUE) +
    geom_path(aes(y = t3 / 2), na.rm = TRUE) +
    geom_path(aes(y = t4 / 2), na.rm = TRUE) +
    geom_hline(yintercept = 0:1, lty = 2) +
    # add line segments from top to middle curve
    geom_segment(
        aes(x = B, xend = B,
            y = dnorm(B, beta, psi) / dnorm(beta, beta, psi) + 0.95,
            yend = dnorm(B, B, E) / dn / 2 + 0.05,
        ),
        arrow = arrow(length = unit(0.1, "inches")),
        data = obs) +
    # lines to points
    geom_segment(
        aes(x = b, xend = b,
            y = dnorm(b, B, E) / dn / 2,
            yend = -1
        ),
        # arrow = arrow(length = unit(0.09, "inches")),
        lty = 3,
        data = obs) +
    # add the observed points
    geom_point(aes(b, -1.0), data = obs) +
    # some labels
    # annotate("label", 25, 0.5, label = "Between-vehicle variation") +
    # annotate("label", 25, -0.5, label = "Measurement error") +
    theme_classic() +
    theme(
        axis.ticks.y = element_blank(),
        axis.line.y = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank()
    ) +
    xlab("Speed (m/s)") +
    annotate("text", 0, 1.9, label = "All vehicles", hjust = "left") +
    annotate("text", 0, 0.9, label = "Individual vehicles", hjust = "left") +
    annotate("text", 0, -0.1, label = "Vehicle observations", hjust = "left")
@

\input{DIRNAME/construct_model.tex}
\input{DIRNAME/realtime_model.tex}
\input{DIRNAME/parameter_estimation.tex}
\input{DIRNAME/historical_model.tex}
\input{DIRNAME/implementation.tex}

\section{Chapter contributions}
\label{sec:nw_contrib}

\begin{itemize}
\item This chapter presents a hierarchical approach to fitting a real-time \kf{} to transit vehicle speed observations, using historical data to estimate the intermediate noise parameters.
\item The network model uses real-time observations obtained from the particle filter (average vehicle speeds along road segments) to estimate the current network state. Similar methods have been presented in the literature, but the primary different in this case is that the entire process works using only \gls{gtfs} data (no external input is required).
\end{itemize}
