\glsresetall

\chapter{Introduction}
\label{cha:intro}

Over the last three decades, technological advances have changed the way people use public transport. In times gone by, one might have used a paper timetable to decide when to leave home, and then be subjected to an indefinite wait until the bus finally appeared around the corner. These days, you just take out your phone to see the bus' precide location on a map. Despite this revolutionary change, to this day it remains a complicated business of converting a location into an \gls{eta}.


Around the world, public transport providers have invested in systems to provide \gls{rti} to their passengers in efforts to improve ridership, the number of commuters choosing to use public transport. Research has shown that \gls{rti} reduced the experienced wait time at bus stops \citep{TCRP_2003} and allows for improved decision making by passengers, leading to shorter waiting times \citep{Cats_2015,Lu_2017}. This, of course, assumes the \gls{rti} is reliable, wherein lies the issue.


One of the main issues with \gls{rti} is that it requires considerable infrastruture to keep track of and report the information \citep{TCRP_2003b}, particularly in recent times when fleet sizes exceed 1000~vehicles. This has inevitably led to a simplification of how arrival times are predicted, which consequently has led to less reliable information, particularly in Auckland, New Zealand.


\section{Arrival time estimation of transit vehicles}
\label{sec:literature}

For a long time, \pt{} services such as buses and trains had static timetables that passengers could use to plan their journey. In the 1960s, the first vehicle tracking systems, which used fixed signposts to detect the passing of a vehicle, were trialed in Germany and the USA \citep{TCRP_1997}. This allowed the transit provider to monitor the \rt{} performance of its services from a central location.


Over the next few decades, \gls{avl} technology was slowly deployed primarily as a monitoring tool for service providers. The first use of \gls{avl} in \gls{rti} was as a \gls{dms} at bus stops displaying the \gls{eta}, in minutes, until the bus arrives \citep{TCRP_2003}. The most prominent example at the time was Transport for London's \emph{Countdown} system, which used the signpost \gls{avl} system with an odometer to determine the vehicle's position and provide \glspl{eta}.



The most difficult challenge for the provision of accurate \gls{rti} is time itself, particularly in the 1990s when computers were much less powerful than they are today. In response to this, simple, fast algorithms were developed that used \rt{} location information to update the estimates of arrival times, the most prominent being the \kf{}. \citet{Reinhoudt_1997} implemented a \kf{} to model the \emph{link travel time}, replacing the weighted average used by Transport for London's Countdown system, and found that it led to more accurate predictions of arrival time. Later, \citet{Wall_1999} and \citet{Dailey_2001} implemented \kf{}s to track the state of a vehicle, allowing for uncertainty in its location and speed to be incorporated into the arrival time prediction, which was based on a \emph{travel time function} estimated from historical data.



The main problem with the signpost \gls{avl} system is that it needs to be rolled out for each individual route. It is therefore no surprise that many transit providers began to favour the distribution of \gls{gps} devices to track their fleets. The result of this was a necessity for a much more generalised prediction framework, since data was no longer route-specific and instead required more complex methods for both tracking and prediction. \citet{Cathey_2003} released a general prescription in which they described the three necessary components to arrival time prediction: tracking, filtering, and prediction.


Tracking is, in our context, the process of combining schedule information with \rt{} location information to acquire the necessary data for the rest of the model. For transit vehicle tracking using a \gls{gps}, the first step is to match the location to the route: geographic observations are processed to compute, for example, \emph{trip distance travelled}, which is the distance the vehicle has travelled along the route \citep{Cathey_2003,Gong_2013}. Other methods involved using arrival time observations, in which case the travel time between \emph{time points} (using significant stops along the route) is observed \citep{Shalaby_2004,Jeong_2005,Yu_2011}.


The filtering component is responsible for taking a sequence of vehicle observations (as determined by the \emph{tracker}) and estimating the \emph{state} of the vehicle, which often includes distance travelled along the route and speed \citep{Dailey_2001,Cathey_2003}. This is where the computational efficiency of the \kf{} plays its pivotal role, since the state can easily and quickly be estimated (details are given in \cref{sec:recursive-bayes}). However, despite being adopted early, more recent applications favour deterministic methods, such as arrival time reporting \citep{Yin_2017,Cats_2015,Cats_2016}. While easy to implement, and often accurate, this approach can reduce reliability in the presence of poor data (such as erroneous or missing arrival or departure times), as observed in the Auckland Transport system.


The final component is the predictor, which combines the vehicle location information with a variety of other information (which can be historical or \rt{}). The general concensus is that this `other information' needs to include \emph{link travel time}---that is, the time taken to travel between various points along the route---and \emph{stop dwell time}---which is the time lost while servicing a bus stop.



Of course, not only has the technology for tracking a vehicle improved over the years: so have computers, leading to more and more complex prediction schemes. \Glspl{svm} \citep{Yu_2006,Yu_2010} and \glspl{ann} \citep{Mazloumi_2012,cn} models trained with historical link travel time data were found to better predict the arrival times of upcoming buses based on the travel time of the preceeding bus, and \citet{Yu_2011} extended the idea to involve vehicles from multiple routes, showing significant improvments over other methods. However, the main limitation was that the routes were pre-specified, which is a common constraint of proposed methods \citep{Chang_2010,Celan_2017,Celan_2018}.


A lot of the innovation for modelling transit vehicles has been in operational research, rather than \gls{rti}. For example \citet{Hans_2015} developed a particle filter to model buses in \rt{} in an attempt to reduce bunching (when consecutive trips end up travelling one after the other rather than spaced out temporally). The particle filter is a computationally demanding generalisation of the \kf{}, so historically it was impossible to implement for \rt{} applications, but in recent years this has changed; indeed, many of the \rt{} models employed come with computational constraints and need to be assessed for their feasibility \citep{Chang_2010,Cats_2016}.




\subsection{Dwell time behaviour at bus stops}
\label{sec:intro_dwell}

The effect of dwell time has also been shown to greatly influence arrival time uncertainty \citep{Jeong_2005,Meng_2013,Shen_2013,Robinson_2013,Gong_2013,Wang_2016}, though in most of these the available data has been either manually collected or available through technologies such as \glspl{apc}, which are less common than \gls{gps}.


\subsection{Road travel times for arrival time prediction}
\label{sec:intro_travel_time}

Early work, such as by \citet{Reinhoudt_1997} and \citet{Wall_1999}, demonstrated the use of \emph{link travel times} to inform the arrival time of upcoming buses.

Any state-of-the-art system for arrival time prediction needs to use \rt{} vehicle location data along with \rt{} link travel times and dwell time information. Where possible, link travel times should be obtained from more than one route in order to expand the available data, or even, if possible, non-transit data. The most popular choice of outside information is taxi data, which is often available to researchers, and has been shown by the likes of \citet{Xinghao_2013} and \citet{Ma_2019} to further improve estimation of traffic state, and ultimately arrival times.


Of course, looking outside of transit altogether we see that traffic flow modelling has been the focus of much research, and some of these methods have been brought into the transit realm. \citet{Julio_2016} developed a shockwave model which used up- and down-stream changes in traffic flows to make forecasts of bus travel times. \citet{Salonen_2013} compared the travel times of buses and cars \ldots


\subsection{Arrival times and journey planning}
\label{sec:intro_etas}


Arrival time prediction of transit vehicles is at first a simple task, but a little inspection shows that underneath there is a lot of complexity, from the types of data through to the models used to make the predictions. These models need to account for a range of systems: vehicle motion, traffic flow behaviour, and stop service times. Perhaps the least explored component of arrival time is indeed the uncertainty associated with it: even in the best of circumstances, we are unlikely to be able to reuce it to zero. Traffic lights, pedestrian crossings, passenger demand at stops, interactions with other buses, weather, and myriad other causes will affect the final arrival time. \citet{Mazloumi_2011} presented some work that involved assessing the coverage probability of a \emph{prediction interval} to convey the remaining uncertainty, but we found no other examples of prediction intervals pertaining to arrival time prediction.


The final aspect of \gls{rti} of significance is \emph{journey planning}, which is the process of determining the best route from origin to destination given a set of conditions, for example departure or arrival time. Early work by \citet{Horn_2004} used simple algorithms to minimise walking and waiting, and were able to make decisions in \rt{}. However, the complexity of this task can get large, particularly when a journey consists of multiple legs (separate bus journeys). \citet{Hame_2013a} developed a Markov decision process to explore all of the possible options under the constraint of arriving on time, which took up to 30~second to solve for some specific journeys. More recently \citet{Zheng_2016} proposed a method that accounted for travel time uncertainty, which is often significant. Even more general is a method by \citet{Berczi_2017} in which any probabilitic model of arrival time could be used as an input to determine an optimal journey plan.




\section{Arrival time prediction in Auckland and abroad}
\label{sec:auckland_etas}

Our principal study area is Auckland, New Zealand, which has a public transport service operated by Auckland Transport. Therefore, the examples given and the issues discussed in this thesis are primarily related to Auckland Transport, but are most likely applicable to other providers around the world. The primary features of Auckland that make it difficult to predict arrival time are heavy congestion along arterial roads, many of which have no or inadequate transit infrastructure, such as bus lanes. Additionally the scheduled adherence of vehicles is often poor, as the majority of routes are timed only by their initial start time (that is, the time the bus departs from the first stop). What's more, poor communication between subcontractors (\AT{} subcontracts individual routes out to various bus companies) means that, where one might expect two buses to link temporally and provide a convenient transfer, they do not---often one arrives at a transfer station just as the connecting route departs, which can, in extreme cases, result in a wait of 30~minutes or more\footnote{This comes, unfortunately, from personal experience.}.


Perhaps the main issue with \AT{} is that, while they may be investing money in select infrastructural projects, the vast majority of routes will still be running along roads with no priority, and neither is there any foreseable change to schedule adherance (that is, bus drivers attempting to remaining on scheduled), since ``Punctuality is measured by the percentage of total scheduled services leaving their origin stop no more than one minute early or five minutes late'' \citep[13]{AT_report_2019}. While this might not necessarily be a problem outside of Auckland, it highlights the issues that simply using the scheduled travel time between stops is inadequate and unreliable.


Perhaps the most interesting point about all of this is that, despite all of this work, many public transport providers still use very simple arrival time prediction mechanisms. The Auckland Transport system, which contains \rt{} vehicle location information, only uses the arrival or departure delay from the most recently visited stop to update the arrival times estimate for upcoming stops. As a result, the system is often unreliable, particularly when traffic is more congested than usual, and leads to much frustration of passengers. One possible reason for this is that many of the arrival time predictions schemes have been developed for a particular city, rather than for transit in general. At first, this may seem reasonable: they are, after all, different cities. However, with the global adoption of \gls{gtfs} (details in \cref{sec:gtfs}), one would expect this not to be the case: ``The standardised format means that innovative tools and products that utilize GTFS can easily be applied accross transit agencies'' \citep[26]{TCRP_2020}.



Many of the arrival time prediction deployments around the globe use location-specific information to model the real-time state of traffic, as we saw with taxi data being the primary example. Other methods use location-specific designs: \citet{Celan_2017,Celan_2018} located stops and other potential time barriers (for example traffic lights, roundabouts, or pedestrian crossings) along specific routes in two major Slovenian cities, allowing them to develop a \emph{network} with nodes (stops, intersection) and edges (roads) between them. They found that ignoring potential time barriers and only using stop locations resulted in poorer predictive performance. The issue is, this information is seldom available, so such networks are not available in general.


Another down side of location-specific setups is exactly that they are location-specific, and often require manual setup, for example identifying intersections, or connecting to unique data sources (taxis). With \gls{gtfs} becoming widespread, it would be desirable to have a generalised framework which could, at its simplest, take a standardised transit data set and generate a transit network that could be modelled in \rt{}, providing arrival times predictions with the much needed travel time information. Any such framework should also take into account stop dwell times, but be extensible so that once deployed, it could be modified to suit any specific location. To the best of our knowledge, no such system exists that uses a \gls{gtfs}-based system to make probabilistic arrival time estimates; that is, a distribution of arrival times that accounts for uncertainty in the system.


\section{Research proposal}
\label{eq:proposal}

Public transport is essential for growing cities where travellers need to get to and from work, school, or other activities in a reliable manner. One major source of unreliability, particularly in Auckland, is with the \rt{} arrival predictions, which are often inaccurate and not trustworthy: sometimes the bus does not even show up, while at others the \gls{eta} increases as the bus encounters heavy traffic, or rapidly decreases as the bus approaches faster the expected. This can deter commuters from choosing to use public transport and prefering private means.


The first part of this research focuses on developing a generalised arrival time prediction framework (not just specifically for Auckland) that can combine data from multiple routes to model traffic congestion, in \rt{}, in an effort to reduce the uncertainty in arrival time estimation. One complete, we will be able to assess the effectiveness of this approach, and determine whether or not more reliable predictions are indeed possible. One approach to reliability improvement will be to introduce the concept of \emph{prediction intervals} in an effort to account for the remaining uncertainty.


A second, related issue is uncertainty in journey planning, particularly when transfers between services are required. As described earlier, it is not uncommon to miss a transfer by a few minutes. It is for this reason that we will explore not only point or interval prediction, but indeed estimating the full arrival time distribution, which one could then use to estimate the probabilities of certain events common in journey planning: will I arrive on time?\ or how long will I have to wait at the transfer point?



To approach this problem, we begin by providing an overview of the relevant information in \cref{cha:data}, most notably of the \gls{gtfs} standard. This is followed up by an overview of the data available to us in Auckland, which includes vehicle positions and trip updates (times of arrival at and departure from bus stops). As many have noted, using a \emph{network} representation of roads and bus stops improves estimation and prediction, particularly when information from different routes can be combined, so we also describe the process of constructing a network from \gls{gtfs} data. We also include a brief overview of \rt{} modelling with \glspl{rbe}, before finally discussing the \rt{} implementation of our application using \textsf{Rcpp}.


A lot of previous research has using the concept of \emph{vehicle state}, which is updated as new information is obtained from the \emph{tracker} \citep{Cathey_2003}. However, this introduces an unnecessary source of error associated with map-matching. To bypass this, we propose a \rt{} vehicle model in \cref{cha:vehicle_model} that uses the observed \gls{gps} data directly in the likelihood function, which allows us to overcome some of the issues that will be introduced in \cref{cha:data}. The primary goal of the vehicle model is to estimate travel times along roads throughout the network, as this has been shown to be one of the primary sources of arrival time uncertainty \citep{cn}.


When it comes to the network itself, there have been many alternate approaches to modelling and predicting travel times. A common method has been to use historical data combined with \rt{} vehicle information---for example, the vehicles speed or travel time along previous roads. In \cref{cha:network_model}, we present a simple \rt{} model that uses the \rt{} travel time information obtained from the vehicle model to update the state of the network. That is, we use \rt{} transit data to infer \rt{} traffic conditions throughout the network. We also provide an example of how, with further research, it could be improved to make more accurate forecasts of arrival time.


The last component of this research is to make arrival time predictions and assess their reliability, which we perform this in two stages. The first stage (\cref{cha:prediction}) involves making arrival time predictions by combining both the vehicle and network states to obtain an arrival time distribution. We assess the statistical properties of the method in comparison to several alternatives. The second stage (\cref{cha:etas}) involves an exploring into \emph{journey planning}, that is, using the arrival time distribution to make informed decisions. This involves comparing point estimates, prediction intervals, and a brief overview of the possibilities of using distributions for decision making: which bus should I catch to maximise my change of getting to work on time? In both chapters, we compare our method with the currently deployed method in Auckland which uses solely \gls{gtfs} information to make the predictions.


Of course, this is a \rt{} application, so throughout all of it we much consider the computational constraints. While many methods currently deployed run in seconds, we set ourselves a goal of running a full interation in no more than 30~seconds, from start (requesting the latest data from the server) to finish (the predictions available for users). The complexities associated with this constraint will be discussed throughout.


Finally, in \cref{cha:discussion}, we review our methods and findings, and comment on what could be done to improve the preditions. The role of \gls{rti} in public transport only going to become more critical as cities---particularly Auckland---grow, and improving the reliability of the information is the first step to increasing ridership.
