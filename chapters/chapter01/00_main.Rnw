\glsresetall

\chapter{Introduction}
\label{cha:intro}

Over the last three decades, technological advances have changed the way people use public transport. In times gone by, one might have used a paper timetable to decide when to leave home, and then be subjected to an indefinite wait until the bus finally appeared around the corner. These days, you just take out your phone to see the bus' precide location on a map. Despite this revolutionary change, to this day it remains a complicated business of converting a location into an \gls{eta}.


Around the world, public transport providers have invested in systems to provide \gls{rti} to their passengers in efforts to improve ridership, the number of commuters choosing to use public transport. Research has shown that \gls{rti} reduced the experienced wait time at bus stops \citep{TCRP_2003} and allows for improved decision making by passengers, leading to shorter waiting times \citep{Cats_2015,Lu_2017}. This, of course, assumes the \gls{rti} is reliable, wherein lies the issue.


One of the main issues with \gls{rti} is that it requires considerable infrastruture to keep track of and report the information \citep{TCRP_2003b}, particularly in recent times when fleet sizes exceed 1000~vehicles. This has inevitably led to a simplification of how arrival times are predicted, which consequently has led to less reliable information, particularly in Auckland, New Zealand.


\section{The evolution of \acrlong{rti}}
\label{sec:literature}

For a long time \pt{} services such as buses and trains used static timetables that passengers could use to plan their journey. In the 1960s, the first vehicle tracking systems, which used fixed signposts to detect the passing of a vehicle, were trialed in Germany and the USA \citep{TCRP_1997}. This allowed the transit provider to monitor the \rt{} performance of its services from a central location.


Over the next few decades, \gls{avl} technology was slowly deployed primarily as a monitoring tool for service providers. The first use of \gls{avl} in \gls{rti} was as a \gls{dms} at bus stops displaying the \gls{eta}, in minutes, until the bus arrives \citep{TCRP_2003}. The most prominent example at the time was Transport for London's \emph{Countdown} system, which used the signpost \gls{avl} system with an odometer to determine the vehicle's position and provide \glspl{eta}.



The most difficult challenge for the provision of accurate \gls{rti} is time itself, particularly in the 1990s when computers were much less powerful than they are today. In response to this, simple, fast algorithms were developed that used \rt{} location information to update the estimates of arrival times, the most prominent being the \kf{}. \citet{Reinhoudt_1997} implemented a \kf{} to model the \emph{link travel time}, replacing the weighted average used by Transport for London's Countdown system, and found that it led to more accurate predictions of arrival time. Later, \citet{Wall_1999} and \citet{Dailey_2001} implemented \kf{}s to track the state of a vehicle, allowing for uncertainty in its location and speed to be incorporated into the arrival time prediction, which was based on a \emph{travel time function} estimated using historical data.



The main problem with the signpost \gls{avl} system is that it needs to be rolled out for each individual route. It is therefore no surprise that many transit providers began to favour the distribution of \gls{gps} devices to track their fleets. The result of this was a necessity for a much more generalised prediction framework, since data was no longer route-specific and instead required more complex methods for both tracking and prediction. \citet{Cathey_2003} released a general prescription in which they described the three necessary components to arrival time prediction: tracking, filtering, and prediction.


Tracking is, in our context, the process of combining schedule information with \rt{} location information to acquire the necessary data for the rest of the model. For transit vehicle tracking using a \gls{gps}, the first step is to match the location to the route: geographic observations are processed to obtain the necessary data, for example \emph{trip distance travelled} \citep{Cathey_2003,Gong_2013}. Other methods involved using arrival time observations, in which case the travel time between \emph{time points} (using significant stops along the route) is observed \citep{Shalaby_2004,Jeong_2005,Yu_2011}. In most cases this is adequate, but there are some situations that can induce unreliability in the final estimates, as we discuss later.


The filtering component is responsible for taking a sequence of vehicle observations (as determined by the \emph{tracker}) and estimating the \emph{state} of the vehicle, which often includes distance travelled along the route and speed \citep{Dailey_2001,Cathey_2003}. This is where the computational efficiency of the \kf{} plays its pivotal role, since the state can easily and quickly be estimated (we discuss this in detail in \cref{sec:recursive-bayes}). However, despite being adopted early, more recent applications favour deterministic methods, such as arrival time reporting \citep{Yin_2017,Cats_2015,Cats_2016}. While easy to implement, and often accurate, this approach can reduce reliability in the presence of poor data (such as erroneous or missing arrival or departure times), as observed in the Auckland Transport system.


The final component is the predictor, which combines the vehicle location information with a variety of other information (which can be historical or \rt{}). The general concensus is that this `other information' needs to include \emph{link travel time}---that is, the time taken to travel between various points along the route---and \emph{stop dwell time}---which is the time lost while servicing a bus stop. Early work, such as by \citet{Reinhoudt_1997} and \citet{Wall_1999}, demonstrated the use of \emph{link travel times} to inform the arrival time of upcoming buses. The effect of dwell time has also been shown to greatly influence arrival time uncertainty \citep{Jeong_2005,Meng_2013,Shen_2013,Robinson_2013,Gong_2013,Wang_2016}, though in most of these the available data has been either manually collected or available through technologies such as \glspl{apc}, which are less common than \gls{gps}.



Of course, not only has the technology for tracking a vehicle improved over the years: so have computers, leading to more and more complex prediction schemes. \Citet{Yu_2006} and \citet{Yu_2010} showed that a \gls{svm} trained with historical link travel time data could better predict the arrival times of upcoming buses based on the travel time of the preceeding bus, and \citet{Yu_2011} extended the idea to involve vehicles from multiple routes, showing significant improvments over other methods. However, the main limitation was that the routes were pre-specified, which is a common constraint of proposed methods \citep{Chang_2010,Celan_2017,Celan_2018}.


A lot of the innovation for modelling transit vehicles has been in operational research, rather than \gls{rti}. For example \citet{Hans_2015} developed a particle filter to model buses in \rt{} in an attempt to reduce bunching (when consecutive trips end up travelling one after the other rather than spaced out temporally). The particle filter is a computationally demanding generalisation of the \kf{}, so historically it was impossible to implement for \rt{} applications, but in recent years this has changed; indeed, many of the \rt{} models employed come with computational constraints and need to be assessed for their feasibility \citep{Chang_2010,Cats_2016}.


Any state-of-the-art system for arrival time prediction needs to use \rt{} vehicle location data along with \rt{} link travel times and dwell time information. Where possible, link travel times should be obtained from more than one route in order to expand the available data, or even, if possible, non-transit data. The most popular choice of outside information is taxi data, which is often available to researchers, and has been shown by the likes of \citet{Xinghao_2013} and \citet{Ma_2019} to further improve estimation of traffic state, and ultimately arrival times.


Of course, looking outside of transit altogether we see that traffic flow modelling has been the focus of much research, and some of these methods have been brought into the transit realm. \citet{Julio_2016} developed a shockwave model which used up- and down-stream changes in traffic flows to make forecasts of bus travel times. \citet{Salonen_2013} compared the travel times of buses and cars \ldots


The final aspect of \gls{rti} of significance is \emph{journey planning}, which is the process of determining the best route from origin to destination given a set of conditions, for example departure or arrival time. Early work by \citet{Horn_2004} used simple algorithms to minimise walking and waiting, and were able to make decisions in \rt{}. However, the complexity of this task can get large, particularly when a journey consists of multiple legs (separate bus journeys). \citet{Hame_2013a} developed a Markov decision process to explore all of the possible options under the constraint of arriving on time, which took up to 30~second to solve for some specific journeys. More recently \citet{Zheng_2016} proposed a method that accounted for travel time uncertainty, which is often significant. Even more general is a method by \citet{Berczi_2017} in which any probabilitic model of arrival time could be used as an input to determine an optimal journey plan.


Perhaps the most interesting point about all of this is that, despite all of this work, many public transport providers still use very simple arrival time prediction mechanisms. The Auckland Transport system, which contains \rt{} vehicle location information, only uses the arrival or departure delay from the most recently visited stop to update the arrival times estimate for upcoming stops. As a result, the system is often unreliable, particularly when traffic is more congested than usual, and leads to much frustration of passengers. One possible reason for this is that many of the arrival time predictions schemes have been developed for a particular city, rather than for transit in general. At first, this may seem reasonable: they are, after all, different cities. However, with the global adoption of \gls{gtfs} (details in \cref{sec:gtfs}), one would expect this not to be the case: ``The standardised format means that innovative tools and products that utilize GTFS can easily be applied accross transit agencies'' \citep[26]{TCRP_2020}.
