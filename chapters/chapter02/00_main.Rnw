\chapter{\Rt{} transit data}
\label{cha:data}

<<gtfs_info,echo=FALSE>>=
source("load_gtfs.R")
updated_at <- as.POSIXct(readLines(".gtfs_date"), tz = "GMT")
updated_fmt <- format(updated_at, "%d %B %Y")

# fetch some info about the data
con <- dbConnect(SQLite(), db)
vmax <- dbGetQuery(con, "select max(version) as v from routes")$v
nroute <- dbGetQuery(con, sprintf("select count(*) as n from routes where version=%s", vmax))$n
ntrip <- dbGetQuery(con, sprintf("select count(*) as n from trips where version=%s", vmax))$n
ntrip.week <- dbGetQuery(con, sprintf("select count(*) as n from calendar where friday=1 and version=%s", vmax))$n
dbDisconnect(con)

# fetch stuff from TransitFeeds
nfeed <- 1108
nlocation <- 606
@

\AT{} operates a fleet of vehicles---including buses, trains, and ferries---%
to transport passengers around Auckland, New Zealand's largest urban region,
from Wellford in the north to Pukekohe in the south \citep{cn}.
Serving the region are \Sexpr{nroute}~routes%
\footnote{As of \Sexpr{updated_fmt}, sourced from \url{https://at.govt.nz/}.},
each providing a service from an \emph{origin} to a \emph{destination}
via a specified sequence of \emph{stops}
at which passengers may board or alight.


For each route, one or more \emph{trips} are scheduled to operate,
typically departing from the origin stop at a fixed time,
with approximate arrival times for the intermediate stops along the way.
In some cases, services will wait at a (usually significant) stop
until the scheduled departure time,
which is referred to as a \emph{layover};
in others, drivers will attempt to adjust their speed to hold to the schedule.
In most cases, however,
drivers will heed no attention to the schedule
and simply drive along the route at whatever speed is reasonable
(or unreasonable)%
\footnote{At least, this is the case in Auckland.}.
Not all trips run every day;
typically trips are scheduled as weekday, Saturday, or Sunday and public holidays.
Altogther there are (at the time of writing)
\Sexpr{format(ntrip, big.mark = ",")}~trips provided by \AT{},
\Sexpr{format(ntrip.week, big.mark = ",")} of which run on weekdays.


The assignment of routes, trips, and stops is a common occurence in transport systems,
to the extent that it was formalised by Google's \emph{\GTFS{}} \citep{GoogleDevelopers_2006}.
\GTFS{} provides a detailed specification of how transit data should be organised,
enabling external systems to access it easily,
with the primary example being Google Maps,
although plenty of other applications exist that make use of it%
\footnote{Such as the one you're reading about right now.}.
It has now been adopted by \Sexpr{format(nfeed, big.mark = ",")}~providers
across \Sexpr{format(nlocation, big.mark = ",")}~locations globally,
as shown in \cref{fig:gtfs_feeds}
(see \cref{sec:gtfs} for further details on \GTFS{}).

\begin{figure}
\centering
\includegraphics[width=0.8\textwidth]{figure/gtfs_feeds.png}
\caption[Locations of GTFS feeds]{Locations of the \Sexpr{nlocation}~\GTFS{} feeds,\\
sourced from \url{http://transitfeeds.com/} on 2 May 2019.}
\label{fig:gtfs_feeds}
\end{figure}


The vehicles servicing the trips are observed as they travel along the route,
either as intermittent \GPS{} locations (\emph{vehicle positions}),
or on arrival at or departure from bus stops along the way (\emph{trip updates}).
How this data is structured is also specified by \GTFS,
and will be described in detail in \cref{sec:realtime-data},
along with a discussion of the issues we encoutered using the \AT{} data.


One of the major ideas we discussed in \cref{sec:literature}
was the importance of combining data from multiple routes when predicting arrival times.
As it stands, there is no direct way of determining if two routes overlap---%
that is, share a common path---from \GTFS{} data.
The simplest approach would be to compare (sub)sequences of stops,
with routes servicing the same stops obviously sharing a common path,
although there are several situations where this is not true.
We formalise this idea, as well as expand on it, in \cref{sec:route-segments}.


The \rt{} nature of the data, and the necessity for predictions to be made
as soon after obtaining the data as possible,
made \gls{rbe} a prime candidate;
many other authors came to the same conclusion,
as we discussed in \cref{sec:literature}.
This class of models are commonly used in vehicle tracking applications,
allowing the vehicle's state (such as speed) to be estimated from
a \rt{} sequence of noisy measurements of its location.
The final section of this chapter gives background information on
the main type of models used in our work,
which will be presented in \cref{cha:vehicle_model,cha:network_model}.


\input{DIRNAME/gtfs.tex}
\input{DIRNAME/realtime_data.tex}
\input{DIRNAME/route-segmentisation.tex}
\input{DIRNAME/recursive_bayes.tex}
