\section{Predicting travel time}
\label{sec:trip_travel_time}

Predicting the time the vehicle will take to arrive at each stop along the remainder of the route is the next step in the process. We do so by combining the trip state with the network state (and short-term forecasts) to estimate how long it will take the bus to travel along the intermediate roads to each stop, as well as include dwell time uncertainty. However, there are several ways we could do so. Perhaps the most obvious is to simply use (where available) the vehicle's particle set to travel the remainder of the route, but this is very computatinally intensive. Alternatively, we could use a normal approximation of the trip and network states, which reduces the problem to a sum, but including dwell time uncertainty is a slight nuisance there. Then there's a historical data-based approach, in which we use historical arrival times to predict (with uncertainty) the next ETA, or even use the current delay plus the scheduled arrival time (neither of which use the network state at all!).

% \input{DIRNAME/travel_time_pf.tex}

\subsection{Particle filter model}
\label{sec:trip_travel_time_pf}

Conceptually, using the particle sample associated with a vehicle is the simplest predictor of travel times, as it intuitively yields a point estimate with uncertainty, and pays no heed to multimodality and non-normality of the target distribution. However, computationally it is quite challenging, as we need to make $N\times(M-m)$ estimates \emph{per vehicle}, of which there are upwards of 1000 at peak times. We will deal with this later.


For now, let's say a trip has state $\Tripr$, and is associated with vehicle $v$, which has a state approximated by $N$ particles as in \cref{eq:}. For each particle, we simply project it forward to all remaining stops, simulating a travel time along each intermediate segment from the network state distribution \cref{eq:}. The simplicity here is that the dwell times at each stop can also be modelling using the same model as in \cref{sec:vehicle_model}.


% \input{DIRNAME/travel_time_normal.tex}
\subsection{Normal approximation}
\label{sec:trip_travel_time_normal}

Due to the huge computational demand of using the particle filter, we could instead use a Normal approximation based on the currently estimate trip (or vehicle) state, and combine the network state. How? The network state is already summarized by a mean and an uncertainty from \cref{sec:nw_model}. We first sum up the roads between each stop (a link), and then sum the link times with dwell times too. However, dwell times are not normally distributed: they are zero-inflated.

[[ pull in the maths stuff from next section ]]

<<normal_approx,cache=TRUE,echo=FALSE,fig.width=8,fig.height=4>>=
napprox <- function(n, pi = rep(0.8, n), t = c(80, 15), mu = rep(20, n), sigma = rep(5, n)) {
    # indicator of stopping:
    d <- do.call(expand.grid, lapply(1:n, function(i) 0:1))
    pi <- apply(sapply(1:n, function(i) ifelse(d[,i], pi[i], 1 - pi[i])), 1, prod)
    mu <- apply(sapply(1:n, function(i) t[1] + ifelse(d[,i], mu[i], 0)), 1, sum)
    sigma <- sqrt(apply(sapply(1:n, function(i) t[2] + ifelse(d[,i], sigma[i]^2, 0)), 1, sum))

    z <- apply(rmultinom(1e6, 1, pi), 2, function(x) which(x == 1))
    x <- rnorm(1e6, mu[z], sigma[z])
    hist(x, 50, freq = FALSE, col = "gray90", lty = 0)
    for (i in 1:nrow(d))
        curve(dnorm(x, mu[i], sigma[i]) * pi[i], n = 1001, add = TRUE,
            lty = 2, col = "gray20")


    ## Can we calculate the quantiles?
    q <- quantile(x, prob = c(0.05, 0.5, 0.95))
    abline(v = q, col = "orangered", lwd = 2)

    f <- function(x, q = 0.95) {
        (sum(pi * pnorm(x, mu, sigma)) - q)^2
    }
    qq <- sapply(c(0.05, 0.5, 0.95), function(q) optimize(f, range(x), q = q)$minimum)
    abline(v = qq, col = "blue", lty = 2)

    ## mean and var
    mean <- sum(pi * mu)

    EVarX <- sum(pi * sigma^2)
    VarEX <- sum(pi * mu^2) - sum(pi * mu)^2
    sd <- sqrt(EVarX + VarEX)

    curve(dnorm(x, mean, sd), n = 1001, add = TRUE, col = "orangered")

    ## Compare quantiles of single normal vs mixture
    qx <- qnorm(c(0.05, 0.5, 0.95), mean, sd)
    abline(v = qx, col = "green4")
    invisible(list(
        x = x,
        pi = pi, mu = mu, sigma = sigma,
        error = sum((qx - qq)^2)
    ))
}
napprox(1, pi = 0.8, mu = 30, sigma = 20, t = c(30, 5))
napprox(2, pi = c(0.8, 0.5), mu = c(30, 20), sigma = c(20, 10), t = c(70, 15))
napprox(3, pi = c(0.5, 0.5, 0.5), mu = c(30, 20, 40), sigma = c(20, 10, 20), t = c(120, 20))
napprox(5, pi = c(0.5, 0.5, 0.5, 0.5, 0.3), mu = c(30, 20, 40, 20, 6), sigma = c(20, 10, 20, 10, 5), t = c(200, 40))
@


% \input{DIRNAME/travel_time_historical.tex}
\subsection{Historical arrival time delays}
\label{sec:trip_travel_time_historical}

An alternative method of estimating arrival time is by using historical delays, which can be estimated from as much data as is available to estimate the mean and uncertainty. This is particularly valuable when no information for a trip is available, in which case it may be cancelled or the vehicle is operating without working \gls{avl}.


% \input{DIRNAME/travel_time_schedule.tex}
